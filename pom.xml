<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <groupId>com.grellacangialosi</groupId>
    <artifactId>lhrparser</artifactId>
    <version>0.1.0</version>
    <packaging>jar</packaging>

    <name>${project.groupId}:${project.artifactId}</name>
    <description>
		This is an implementation of the parser described in "Non-Projective Dependency Parsing via Latent Heads
        Representation (LHR) - Matteo Grella and Simone Cangialosi (2018)", based on the SimpleDNN library.
    </description>
    <url>http://github.com/GrellaCangialosi/LHRParser</url>

    <scm>
        <connection>scm:git:git://github.com/GrellaCangialosi/LHRParser.git</connection>
        <developerConnection>scm:git:ssh://github.com:GrellaCangialosi/LHRParser.git</developerConnection>
        <url>http://github.com/GrellaCangialosi/LHRParser/tree/master</url>
    </scm>

    <developers>
        <developer>
            <name>Matteo Grella</name>
            <email>matteogrella@gmail.com</email>
            <organization>Independent Researcher</organization>
            <organizationUrl>http://www.matteogrella.com</organizationUrl>
        </developer>

        <developer>
            <name>Simone Cangialosi</name>
            <email>sm.cangialosi@gmail.com</email>
            <organization>Independent Researcher</organization>
            <organizationUrl>http://www.simonecangialosi.com</organizationUrl>
        </developer>
    </developers>

    <licenses>
        <license>
            <name>Apache License, Version 2.0</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <assembly-plugin.version>2.6</assembly-plugin.version>
        <build-helper-plugin.version>3.0.0</build-helper-plugin.version>
        <nexus-staging-plugin.version>1.6.7</nexus-staging-plugin.version>
        <maven-source-plugin.version>3.0.0</maven-source-plugin.version>
        <maven-gpg-plugin.version>1.5</maven-gpg-plugin.version>
        <kotlin.version>1.2.21</kotlin.version>
        <kotlin.compiler.incremental>true</kotlin.compiler.incremental>
        <spek.version>[1.1.5]</spek.version>
        <xenocom.version>0.0.5</xenocom.version>
        <argparser.version>2.0.4</argparser.version>
        <klaxon.version>0.30</klaxon.version>
        <dokka.version>0.9.13</dokka.version>
        <surfire.version>2.19.1</surfire.version>
        <progressindicator.version>1.0.0</progressindicator.version>
        <conllio.version>0.1.0</conllio.version>
        <simplednn.version>[0.9.0]</simplednn.version>
        <dependencytree.version>0.3.0</dependencytree.version>
        <neuralparser.version>[0.2.8]</neuralparser.version>
        <linguisticdescription.version>0.8.0</linguisticdescription.version>
        <tokensencoder.version>[0.1.0]</tokensencoder.version>
    </properties>

    <repositories>
        <repository>
            <id>jcenter</id>
            <url>https://jcenter.bintray.com/</url>
        </repository>
    </repositories>

    <pluginRepositories>
        <pluginRepository>
            <id>jcenter</id>
            <name>JCenter</name>
            <url>https://jcenter.bintray.com/</url>
        </pluginRepository>
    </pluginRepositories>

    <build>
        <sourceDirectory>src/main/kotlin</sourceDirectory>

        <plugins>
            <plugin>
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-maven-plugin</artifactId>
                <version>${kotlin.version}</version>

                <executions>
                    <execution>
                        <id>compile</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                    </execution>

                    <execution>
                        <id>test-compile</id>
                        <phase>test-compile</phase>
                        <goals>
                            <goal>test-compile</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>${build-helper-plugin.version}</version>
                <executions>
                    <execution>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>add-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>examples</source> <!-- Adding source directory -->
                            </sources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>${assembly-plugin.version}</version>
                <executions>
                    <execution>
                        <id>training-assembly</id>
                        <phase>package</phase>
                        <goals> <goal>single</goal> </goals>
                        <configuration>
                            <finalName>lhrparser-train</finalName>
                            <archive>
                                <manifest>
                                    <addClasspath>true</addClasspath>
                                    <mainClass>TrainingKt</mainClass>
                                </manifest>
                            </archive>
                            <descriptorRefs>
                                <descriptorRef>jar-with-dependencies</descriptorRef>
                            </descriptorRefs>
                        </configuration>
                    </execution>

                    <execution>
                        <id>evaluation-assembly</id>
                        <phase>package</phase>
                        <goals> <goal>single</goal> </goals>
                        <configuration>
                            <finalName>lhrparser-evaluate</finalName>
                            <archive>
                                <manifest>
                                    <addClasspath>true</addClasspath>
                                    <mainClass>EvaluationKt</mainClass>
                                </manifest>
                            </archive>
                            <descriptorRefs>
                                <descriptorRef>jar-with-dependencies</descriptorRef>
                            </descriptorRefs>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <dependencies>
        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-stdlib</artifactId>
            <version>${kotlin.version}</version>
        </dependency>

        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-reflect</artifactId>
            <version>${kotlin.version}</version>
        </dependency>

        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-test</artifactId>
            <version>${kotlin.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.jetbrains.spek</groupId>
            <artifactId>spek-api</artifactId>
            <version>${spek.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.jetbrains.spek</groupId>
            <artifactId>spek-junit-platform-engine</artifactId>
            <version>${spek.version}</version>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>com.xenomachina</groupId>
            <artifactId>xenocom</artifactId>
            <version>${xenocom.version}</version>
        </dependency>

        <dependency>
            <groupId>com.xenomachina</groupId>
            <artifactId>kotlin-argparser</artifactId>
            <version>${argparser.version}</version>
        </dependency>

        <dependency>
            <groupId>com.beust</groupId>
            <artifactId>klaxon</artifactId>
            <version>${klaxon.version}</version>
        </dependency>

        <dependency>
            <groupId>com.kotlinnlp</groupId>
            <artifactId>progressindicator</artifactId>
            <version>${progressindicator.version}</version>
        </dependency>

        <dependency>
            <groupId>com.kotlinnlp</groupId>
            <artifactId>conllio</artifactId>
            <version>${conllio.version}</version>
        </dependency>

        <dependency>
            <groupId>com.kotlinnlp</groupId>
            <artifactId>dependencytree</artifactId>
            <version>${dependencytree.version}</version>
        </dependency>

        <dependency>
            <groupId>com.kotlinnlp</groupId>
            <artifactId>simplednn</artifactId>
            <version>${simplednn.version}</version>
        </dependency>

        <dependency>
            <groupId>com.kotlinnlp</groupId>
            <artifactId>neuralparser</artifactId>
            <version>${neuralparser.version}</version>
        </dependency>

        <dependency>
            <groupId>com.kotlinnlp</groupId>
            <artifactId>linguisticdescription</artifactId>
            <version>${linguisticdescription.version}</version>
        </dependency>

        <dependency>
            <groupId>com.kotlinnlp</groupId>
            <artifactId>tokensencoder</artifactId>
            <version>${tokensencoder.version}</version>
        </dependency>
    </dependencies>
</project>
